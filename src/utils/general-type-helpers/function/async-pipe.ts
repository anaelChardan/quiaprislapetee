/* eslint-disable @typescript-eslint/ban-types */
/* eslint-disable no-shadow */
/* eslint-disable prefer-rest-params */
/* eslint-disable no-redeclare */

type MaybePromise<T> = Promise<T> | T;

export function asyncPipe<A, B>(a: A, ab: (a: A) => MaybePromise<B>): Promise<B>;
export function asyncPipe<A, B, C>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
): Promise<C>;
export function asyncPipe<A, B, C, D>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
): Promise<D>;
export function asyncPipe<A, B, C, D, E>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
): Promise<E>;
export function asyncPipe<A, B, C, D, E, F>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
): Promise<F>;
export function asyncPipe<A, B, C, D, E, F, G>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
): Promise<G>;
export function asyncPipe<A, B, C, D, E, F, G, H>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
): Promise<H>;
export function asyncPipe<A, B, C, D, E, F, G, H>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
): Promise<H>;
export function asyncPipe<A, B, C, D, E, F, G, H, I>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
): Promise<I>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
): Promise<J>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
): Promise<K>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
): Promise<L>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
): Promise<M>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
): Promise<N>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
): Promise<O>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
): Promise<P>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
): Promise<Q>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
  qr: (q: Q) => MaybePromise<R>,
): Promise<R>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
  qr: (q: Q) => MaybePromise<R>,
  rs: (r: R) => MaybePromise<S>,
): Promise<S>;
export function asyncPipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T>(
  a: A,
  ab: (a: A) => MaybePromise<B>,
  bc: (b: B) => MaybePromise<C>,
  cd: (c: C) => MaybePromise<D>,
  de: (d: D) => MaybePromise<E>,
  ef: (e: E) => MaybePromise<F>,
  fg: (f: F) => MaybePromise<G>,
  gh: (g: G) => MaybePromise<H>,
  hi: (h: H) => MaybePromise<I>,
  ij: (i: I) => MaybePromise<J>,
  jk: (j: J) => MaybePromise<K>,
  kl: (k: K) => MaybePromise<L>,
  lm: (l: L) => MaybePromise<M>,
  mn: (m: M) => MaybePromise<N>,
  no: (n: N) => MaybePromise<O>,
  op: (o: O) => MaybePromise<P>,
  pq: (p: P) => MaybePromise<Q>,
  qr: (q: Q) => MaybePromise<R>,
  rs: (r: R) => MaybePromise<S>,
  st: (s: S) => MaybePromise<T>,
): Promise<T>;
export function asyncPipe(a: unknown, ...fns: Function[]) {
  return fns.reduce(async (y, fn) => fn(await y), a);
}
